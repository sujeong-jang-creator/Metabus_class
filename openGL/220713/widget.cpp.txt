#include "widget.h"
#include <GL/glu.h>
Widget::Widget(QWidget *parent)
    : QOpenGLWidget(parent)
{
    xAngle=0,yAngle=0,zAngle=0;
    left=-1,right=-1;
    bottom=-1,top=1;
    bNear=-1,bFar=1;
    fov=45;

    setWindowTitle("opengl Viewing");
    resize(600,600);
}

Widget::~Widget()
{
}

void Widget::initializeGL(){
    initializeOpenGLFunctions();
    glClearColor(0.0, 0.0, 0.0, 1.0);
}

void Widget::resizeGL(int w, int h){
glViewport(0,0,(GLint)w,(GLint)h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(-2,2,-2,2,-2,2);
}

void Widget::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
    glShadeModel(GL_FLAT);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    switch(bProjection){
    case 0:
        glOrtho(left,right,bottom,top,bNear,bFar);
        break;
    case 1:
        glFrustum(left,right,bottom,top,bNear,bFar);
        break;
    case 2:
        GLfloat aspect= (GLfloat)lastWidth/(GLfloat)lastHeight;
        gluPerspective(fov,aspect,bNear,bFar);
        break;
    }
glMatrixMode(GL_MODELVIEW);
glPushMatrix();


if(bProjection==0){
    glTranslatef(0,0,-2);
}
    glRotatef(xAngle,1.0f,0.0f,0.0f);
    glRotatef(yAngle,0.0f,1.0f,0.0f);
    glRotatef(zAngle,0.0f,0.0f,1.0f);
if(bObject==0){
drawPyramid();
}else{
    GLUquadricObj *pQuad;
    pQuad=gluNewQuadric();
    gluQuadricDrawStyle(pQuad,GLU_LINE);
    glTranslatef(0,0,-0.6);
    glColor3f(1,1,1);
    gluCylinder(pQuad,0.3,0.3,1.2,20,20);
}
glPopMatrix();
glFlush();
}
void Widget::drawPyramid(){

    glColor3f(1, 1, 1);
        glBegin(GL_QUADS);
        glVertex2f(-0.5, 0.5);
        glVertex2f(0.5, 0.5);
        glVertex2f(0.5, -0.5);
        glVertex2f(-0.5, -0.5);
    glEnd();
    //위쪽 빨간면
    glBegin(GL_TRIANGLE_FAN);
      glColor3f(1, 1, 1);
          glVertex3f(0, 0,-0.8);
    //      glVertex3f(1, 0,0);
          glColor3f(1,0,0);
          glVertex2f(0.5, 0.5);
          glVertex2f(-0.5, 0.5);
    //왼쪽 노란면
      glColor3f(1, 1, 0);
      glVertex2f(-0.5, -0.5);
    //아래쪽 초록면
      glColor3f(0, 1, 0);
      glVertex2f(0.5, -0.5);
    //오른쪽 파란면
      glColor3f(0, 0, 1);
      glVertex2f(0.5, 0.5);
    glEnd();


}
void::Widget::keyPressEvent(QKeyEvent*event){

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    glColor3f(1,1,1);

    switch(event->key()){

    case Qt::Key_1:
bObject=0;
bNear=-1;
bFar=1;
    break;
    case Qt::Key_2:
        bObject=1;
        bNear=1;
        bFar=10;
        break;
    case Qt::Key_3:
        bObject=2;
        bNear=1;
        bFar=10;
    break;
    case Qt::Key_4:
        bObject=0;
    break;
    case Qt::Key_5:
bObject=1;
    break;
    case Qt::Key_A:
xAngle+=2;
    break;
    case Qt::Key_S:
xAngle-=2;
    break;
    case Qt::Key_D:
yAngle+=2;
    break;
    case Qt::Key_F:
yAngle-=2;
    break;
    case Qt::Key_G:
zAngle+=2;
        break;
    case Qt::Key_H:
zAngle-=2;
        break;
    case Qt::Key_J:
xAngle=yAngle=zAngle=0;
        break;
    case Qt::Key_Q:
left+=0.1;
        break;
    case Qt::Key_W:
left-=0.1;
        break;
    case Qt::Key_E:

        break;
    case Qt::Key_R:

        break;
    case Qt::Key_T:

        break;
    case Qt::Key_Y:

        break;
    case Qt::Key_U:

        break;
    case Qt::Key_I:

        break;
    case Qt::Key_O:

        break;
    case Qt::Key_P:

        break;
    case Qt::Key_Z:

        break;
    case Qt::Key_X:

        break;
    case Qt::Key_C:

        break;
    case Qt::Key_V:

        break;
    case Qt::Key_B:

        break;
    };
update();
}

-------------------------------------------------------------------------

