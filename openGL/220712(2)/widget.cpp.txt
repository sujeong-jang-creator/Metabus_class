#include "widget.h"
//#include <GL/glu.h>

Widget::Widget(QWidget *parent)
    : QOpenGLWidget(parent)
{
    setWindowTitle("OpenGL DisplayList");
    resize(800,800);
}

Widget::~Widget()
{
}

void Widget::initializeGL(){
    initializeOpenGLFunctions();
    glClearColor(0.0, 0.0, 0.0, 1.0);
    dl = glGenLists(1);
    glNewList(dl, GL_COMPILE);
    glBegin(GL_TRIANGLES);
    glVertex2f(0.0, 0.2);
    glVertex2f(-0.2, -0.2);
    glVertex2f(0.2, -0.2);
    glEnd();
    glEndList();
}

void Widget::resizeGL(int w, int h)
{
    glViewport(0,0,(GLint)w,(GLint)h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1,1,-1,1,-1,1);
}

void Widget::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();

    glCallList(dl);

    glTranslatef(0.6, 0.0, 0.0);
    glColor3f(0,1,0);
    glCallList(dl);

    // glLoadIdentity(); 는 다시 원점으로 보내는거
    glLoadIdentity();
    glTranslatef(0.0, 0.6, 0.0);
    glColor3f(0,1,0);
    glCallList(dl);

    glFlush();
}

----------------------------------------------------------------------

void Widget::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);

    glPushMatrix();
    glCallList(dl);

    glPushMatrix();
    glTranslatef(0.6, 0.0, 0.0);
    glColor3f(0,1,0);
    glCallList(dl);

    glPopMatrix();
    glTranslatef(0.0, 0.6, 0.0);
    glColor3f(0,1,0);
    glCallList(dl);

    glPopMatrix();

    glFlush();
}

----------------------------------------------------------------------------

void Widget::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);

    glPushMatrix();
    glScalef(-2.0, 3.0, 1.0);
    glCallList(dl);
    glPushMatrix();

    glFlush();
}